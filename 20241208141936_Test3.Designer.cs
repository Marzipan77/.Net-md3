// <auto-generated />
using System;
using MD3Marcis.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MD3Marcis.Migrations
{
    [DbContext(typeof(dbContextCourses))]
    [Migration("20241208141936_Test3")]
    partial class Test3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MD3Marcis.Model.Assignment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Deadline")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.ToTable("Assignments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CourseId = 1,
                            Deadline = new DateTime(2024, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Python"
                        },
                        new
                        {
                            Id = 2,
                            CourseId = 2,
                            Deadline = new DateTime(2024, 4, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "SQL skripti"
                        });
                });

            modelBuilder.Entity("MD3Marcis.Model.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TeacherId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Programmēšana",
                            TeacherId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Datu bāzes",
                            TeacherId = 2
                        });
                });

            modelBuilder.Entity("MD3Marcis.Model.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StudentIdNumber")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Gender = 1,
                            Name = "Elza",
                            StudentIdNumber = 3001,
                            Surname = "Ziediņa"
                        },
                        new
                        {
                            Id = 2,
                            Gender = 0,
                            Name = "Artis",
                            StudentIdNumber = 3002,
                            Surname = "Balodis"
                        },
                        new
                        {
                            Id = 3,
                            Gender = 1,
                            Name = "Rūta",
                            StudentIdNumber = 3003,
                            Surname = "Lāce"
                        },
                        new
                        {
                            Id = 4,
                            Gender = 0,
                            Name = "Edgars",
                            StudentIdNumber = 3004,
                            Surname = "Bērziņš"
                        });
                });

            modelBuilder.Entity("MD3Marcis.Model.Submission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AssignmentId")
                        .HasColumnType("int");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("SubmissionTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AssignmentId");

                    b.HasIndex("StudentId");

                    b.ToTable("Submissions");

                    b.HasData(
                        new
                        {
                            Id = 3,
                            AssignmentId = 1,
                            Score = 90,
                            StudentId = 1,
                            SubmissionTime = new DateTime(2024, 3, 1, 10, 30, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            AssignmentId = 1,
                            Score = 75,
                            StudentId = 3,
                            SubmissionTime = new DateTime(2024, 3, 1, 12, 45, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            AssignmentId = 2,
                            Score = 85,
                            StudentId = 2,
                            SubmissionTime = new DateTime(2024, 4, 15, 11, 15, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            AssignmentId = 2,
                            Score = 80,
                            StudentId = 4,
                            SubmissionTime = new DateTime(2024, 4, 15, 14, 20, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("MD3Marcis.Model.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("ContractDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Teachers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ContractDate = new DateTime(2019, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Gender = 1,
                            Name = "Laura",
                            Surname = "Kļaviņa"
                        },
                        new
                        {
                            Id = 2,
                            ContractDate = new DateTime(2021, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Gender = 0,
                            Name = "Mārtiņš",
                            Surname = "Rozītis"
                        });
                });

            modelBuilder.Entity("MD3Marcis.Model.Assignment", b =>
                {
                    b.HasOne("MD3Marcis.Model.Course", "Course")
                        .WithMany("Assignments")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("MD3Marcis.Model.Course", b =>
                {
                    b.HasOne("MD3Marcis.Model.Teacher", "Teacher")
                        .WithMany("Courses")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("MD3Marcis.Model.Submission", b =>
                {
                    b.HasOne("MD3Marcis.Model.Assignment", "Assignment")
                        .WithMany("Submissions")
                        .HasForeignKey("AssignmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MD3Marcis.Model.Student", "Student")
                        .WithMany("Submissions")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Assignment");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("MD3Marcis.Model.Assignment", b =>
                {
                    b.Navigation("Submissions");
                });

            modelBuilder.Entity("MD3Marcis.Model.Course", b =>
                {
                    b.Navigation("Assignments");
                });

            modelBuilder.Entity("MD3Marcis.Model.Student", b =>
                {
                    b.Navigation("Submissions");
                });

            modelBuilder.Entity("MD3Marcis.Model.Teacher", b =>
                {
                    b.Navigation("Courses");
                });
#pragma warning restore 612, 618
        }
    }
}
